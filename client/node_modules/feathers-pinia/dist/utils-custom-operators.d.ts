export declare function like(value: string, search: string, regexOptions?: string): boolean;
export declare function iLike(str: string, search: string): boolean;
export declare const $like: (params: any, ownerQuery: any, options: any) => import("sift").EqualsOperation<any>;
export declare const $notLike: (params: any, ownerQuery: any, options: any) => import("sift").EqualsOperation<any>;
export declare const $ilike: (params: any, ownerQuery: any, options: any) => import("sift").EqualsOperation<any>;
export declare const operations: {
    $like: (params: any, ownerQuery: any, options: any) => import("sift").EqualsOperation<any>;
    $notLike: (params: any, ownerQuery: any, options: any) => import("sift").EqualsOperation<any>;
    $ilike: (params: any, ownerQuery: any, options: any) => import("sift").EqualsOperation<any>;
    $iLike: (params: any, ownerQuery: any, options: any) => import("sift").EqualsOperation<any>;
    $notILike: (params: any, ownerQuery: any, options: any) => import("sift").EqualsOperation<any>;
};
