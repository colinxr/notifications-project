import { BaseModel } from './service-store/base-model';
import { Ref } from 'vue-demi';
import { HandleEvents } from './types';
import { Pinia, StateTree, _GettersTree } from 'pinia';
import { ServiceStore, DefineFeathersStoreOptions } from './service-store/types';
interface SetupOptions {
    ssr?: boolean | Ref<boolean>;
    clients: {
        [alias: string]: any;
    };
    idField?: string;
    tempIdField?: string;
    handleEvents?: HandleEvents;
    enableEvents?: boolean;
    debounceEventsTime?: number;
    debounceEventsGuarantee?: boolean;
    whitelist?: string[];
    state?: () => {
        [k: string]: any;
    };
    getters?: {
        [k: string]: (state: any) => any;
    };
    actions?: {
        [k: string]: Function;
    };
}
export declare function setupFeathersPinia(globalOptions: SetupOptions): {
    defineStore: {
        <Id extends string, M extends BaseModel = BaseModel, S extends StateTree = {}, G extends _GettersTree<S> = {}, A = {}>(id: Id, options: Omit<DefineFeathersStoreOptions<Id, M, S, G, A>, "id">): (pinia?: Pinia | undefined) => ServiceStore<Id, M, S, G, A>;
        <Id_1 extends string, M_1 extends BaseModel = BaseModel, S_1 extends StateTree = {}, G_1 extends _GettersTree<S_1> = {}, A_1 = {}>(options: DefineFeathersStoreOptions<Id_1, M_1, S_1, G_1, A_1>): (pinia?: Pinia | undefined) => ServiceStore<Id_1, M_1, S_1, G_1, A_1>;
    };
    BaseModel: typeof BaseModel;
};
export {};
