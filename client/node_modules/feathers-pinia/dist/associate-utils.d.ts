import type { FindClassParams, FindClassParamsStandalone, ModelStatic, ServiceStoreDefault } from './service-store/types';
import { BaseModel } from './service-store';
export declare type HandleSetInstance<M> = (this: M, associatedRecord: M) => void;
export declare function getParams<M extends BaseModel>(instance: any, store: ServiceStoreDefault<M>, makeParams?: (instance: M) => FindClassParams): FindClassParamsStandalone<M> | void;
export declare function setupAssociation<M extends BaseModel>(instance: M, handleSetInstance: any, prop: string, Model: ModelStatic<BaseModel>, propUtilsPrefix: string): {
    _handleSetInstance: any;
    propUtilName: string;
};
